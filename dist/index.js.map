{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/models/user.js","../src/models/like.js","../src/models/comment.js","../src/routes/users.js","../src/models/dish.js","../src/models/topping.js","../src/models/location.js","../src/SaveData.js","../src/routes/dishes.js","../src/config/passport.js","../src/index.js"],"sourcesContent":["export default {\r\n\tdatabase: 'mongodb://sm1t:34ezezin@ds145299.mlab.com:45299/food72',\r\n\tsecret: 'yoursecret'\r\n}","import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\nimport Promise from 'bluebird';\r\nmongoose.Promise = Promise;\r\n\r\nconst UserSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tphone: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\temail: {\r\n\t\ttype: String\r\n\t},\r\n\tavatar: {\r\n\t\ttype: String\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nUserSchema.methods.getUserById = async function(userId) {\r\n\treturn await User.findById({id: userId});\r\n}\r\n\r\nUserSchema.statics.hashPassword = async function(password) {\r\n\ttry\t{\r\n\t\tconst salt = await bcrypt.genSalt(10);\r\n\t\tconst hash = await bcrypt.hash(password, salt);\r\n\t\treturn hash;\r\n\t}\r\n\r\n\tcatch(err) {\r\n\t\tthrow err;\r\n\t}\r\n}\r\n\r\nUserSchema.statics.comparePassword = async function(candidatePassword, hash)  {\r\n\tconsole.log('try compare');\r\n\ttry {\r\n\t\tconst isMatch = await bcrypt.compare(candidatePassword, hash);\r\n\t\tconsole.log(isMatch);\r\n\t\treturn isMatch;\r\n\t} catch(err) {\r\n\t\tthrow err;\r\n\t}\r\n}\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n\r\n\r\n","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst LikeSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t}\r\n});\r\n\r\n\r\nexport default mongoose.model('Like', LikeSchema);\r\n\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst CommentSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t},\r\n\ttext: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\nexport default mongoose.model('Comment', CommentSchema);","import express from 'express';\r\nimport passport from 'passport';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\nimport User from '../models/user';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\n\r\nconst router = express.Router();\r\n\r\n// Register\r\nrouter.post('/register', async (req, res) => {\r\n\r\n\tconst data = req.body;\r\n\r\n\tconst exist = await User.findOne({phone: data.phone});\r\n\tif (exist) {\r\n\t\treturn res.json({success: false, msg: 'User already exist'});\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst user = new User(data);\r\n\t\tconst hash = await User.hashPassword(user.password);\r\n\t\tuser.password = hash;\r\n\t\tconst phone = user.phone;\r\n\t\tuser.save();\r\n\t\tconst token = jwt.sign({phone}, config.secret, {\r\n\t\t\t\texpiresIn: 604800 // 1 week\r\n\t\t\t});\r\n\t\treturn res.json({user, token: 'JWT ' + token});\r\n\t}\r\n\tcatch(err) {\r\n\t\treturn res.status(500).json(err);\r\n\t}\r\n})\r\n\r\n// Authenticate\r\nrouter.post('/auth', async (req, res) => {\r\n\tconst phone = req.body.phone;\r\n\tconst password = req.body.password;\r\n\r\n\tconst user = await User.findOne({phone: phone});\r\n\tif (!user) {\r\n\t\treturn res.status(403).json({success: false, msg: 'User not found'});\r\n\t}\r\n\r\n\tconsole.log(password, user.password);\r\n\t\r\n\ttry {\r\n\t\tconst isMatch = await User.comparePassword(password, user.password);\r\n\t\tif (isMatch) {\r\n\t\t\tconst token = jwt.sign({phone}, config.secret, {\r\n\t\t\t\texpiresIn: 604800 // 1 week\r\n\t\t\t});\r\n\t\t\tres.json({success: true, token: 'JWT ' + token});\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\tthrow err;\r\n\t}\r\n})\r\n\r\nrouter.get('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json({user: req.user});\r\n})\r\n\r\n\r\n// Find user by id\r\nrouter.get('/:userId?/:selection?', async (req, res) => {\r\n\tconst userId = req.params.userId;\r\n\tconst selection = req.params.selection;\r\n\tconst arr = ['likes', 'comments'];\r\n\t\r\n\tif (!userId && !selection) {\r\n\t\tconst users = await User.find();\r\n\t\treturn res.json(users);\r\n\t}\r\n\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!userId.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: 'Incorrect userId'});\r\n\t}\r\n\r\n\r\n\tconst user = await User.findOne({_id: userId});\r\n\tif (userId && !selection) {\r\n\t\tif (!user) {\r\n\t\t\treturn res.status(404).json({succuss:false, msg: 'User not found'});\r\n\t\t}\r\n\t\treturn res.json(user);\r\n\t} \r\n\r\n\tif (arr.indexOf(`${selection}`)!= -1) {\r\n\t\tswitch(selection) {\r\n\t\t\tcase 'likes':\r\n\t\t\t\tconst likes = await Like.find({user: user._id});\r\n\t\t\t\treturn res.json(likes);\r\n\t\t\tbreak;\r\n\t\t\tcase 'comments':\r\n\t\t\t\tconst comments = await Comment.find({user: user._id});\r\n\t\t\t\treturn res.json(comments);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\treturn res.status(400).json({success: false, msg: 'Bad Request'});\r\n\t}\r\n})\r\n\r\n\r\n// Change users fields\r\nrouter.post('/:userId?', async (req, res) => {\r\n\tconst userId = req.params.userId;\r\n\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!userId || !userId.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: 'Incorrect userId'});\r\n\t}\r\n\r\n\tconst user = await User.findOne({_id: userId});\r\n\tif(!user) {\r\n\t\treturn res.status(404).json({success: false, msg: 'User not found'});\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst changes = req.body;\r\n\t\tawait User.update({_id: userId}, {$set:\r\n\t\t\tchanges\r\n\t\t})\r\n\t\treturn res.json(await User.findOne({_id: userId}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: 'Server Error', Error_name: err.name, Error_msg: err.message});\r\n\t}\r\n})\r\n\r\nexport default router;","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\n// Product Schema\r\nconst DishSchema = mongoose.Schema({\r\n\tname : {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tcategory : {\r\n\t\ttype: String\r\n\t},\r\n\tlocations: [\r\n\t\t{\r\n\t\t\tlocationId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Location',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\ttoppings: [\r\n\t\t{\r\n\t\t\ttoppingId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Topping',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tdishPicture: {\r\n\t\ttype: String\r\n\t},\r\n\tcallories: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tdescription: {\r\n\t\ttype: String\r\n\t},\r\n\tcomposition: [\r\n\t\t{\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tconteiner: {\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tprice: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t},\r\n\tproteins: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tcarbohydrates: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tfats: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tactive: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nexport default mongoose.model('Dish', DishSchema);\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst ToppingSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Topping', ToppingSchema);","import mongoose from 'mongoose';\r\n\r\nconst LocationSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Location', LocationSchema);","import Dish from './models/dish';\r\n\r\nexport default async function test(elem) {\r\n\r\n\ttry {\r\n\t\tawait elem.save();\r\n\t\treturn {\r\n\t\t\telem\r\n\t\t}\r\n\t} catch(err) {\r\n\t\tthrow err;\r\n\t}\r\n}\r\n\r\n\r\n/*\r\n\t\t\tconst promises = data.dish.map((elem) => {\r\n\t\t\t\tconsole.log('2');\r\n\t\t\t\tconst dishData = Object.assign({}, elem);\r\n\t\t\t\treturn (new Dish(dishData)).save();\r\n\t\t\t})\r\n\t\treturn {\r\n\t\t\tdish: await Promise.all(promises)\r\n\t\t}\r\n*/","import express from 'express';\r\nimport config from '../config/index';\r\nimport Dish from '../models/dish';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\nimport Topping from '../models/topping';\r\nimport Location from '../models/location';\r\nconst router = express.Router();\r\nimport SaveData from '../SaveData';\r\n\r\n// Show likes List\r\nrouter.get('/likes', async (req, res) => {\r\n\tconst likes = await Like.find();\r\n\treturn res.json(likes);\r\n})\r\n// Add Like\r\nrouter.post('/likes', async (req, res) => {\r\n\ttry {\r\n\t\tconst data = req.body;\r\n\t\t(new Like(data)).save();\r\n\t\treturn res.json('okay');\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: 'Server error:'});\r\n\t}\r\n\r\n})\r\n\r\n\r\n// Show comments List\r\nrouter.get('/comments', async (req, res) => {\r\n\tconst comments = await Comment.find();\r\n\treturn res.json(comments);\r\n})\r\n// Add Comment\r\nrouter.post('/comments', async (req, res) => {\r\n\ttry {\r\n\t\tconst data = req.body;\r\n\t\t(new Comment(data)).save();\r\n\t\treturn res.json('ok');\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: 'Server error:'});\r\n\t}\r\n\r\n})\r\n\r\n\r\n// Show toppings List\r\nrouter.get('/toppings', async (req, res) => {\r\n\tconst toppings = await Topping.find();\r\n\treturn res.json(toppings);\r\n})\r\n// Add Topping\r\nrouter.post('/toppings', async (req, res) => {\r\n\ttry {\r\n\t\tconst data = req.body;\r\n\t\t(new Topping(data)).save();\r\n\t\treturn res.json('ok');\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: 'Server error:'});\r\n\t}\r\n\r\n})\r\n\r\n\r\n// Show locations List\r\nrouter.get('/locations', async (req, res) => {\r\n\tconst locations = await Location.find();\r\n\treturn res.json(locations);\r\n})\r\n// Add Location\r\nrouter.post('/locations', async (req, res) => {\r\n\ttry {\r\n\t\tconst data = req.body;\r\n\t\t(new Location(data)).save();\r\n\t\treturn res.json('ok');\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: 'Server error:'});\r\n\t}\r\n\t\r\n})\r\n\r\n// Default\r\nrouter.get('/:dishId?/:selection?', async (req, res) => {\r\n\tconst dishId = req.params.dishId;\r\n\tconst selection = req.params.selection;\r\n\tconst arr = ['likes', 'comments', 'toppings', 'locations', 'composition'];\r\n\t\r\n\tif (!dishId && !selection) {\r\n\t\tconst dishes = await Dish.find();\r\n\t\treturn res.json(dishes);\r\n\t}\r\n\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!dishId.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: 'Incorrect userId'});\r\n\t}\r\n\r\n\tconst dish = await Dish.findOne({_id: dishId});\r\n\tif (dishId && !selection) {\r\n\t\tif (!dish) {\r\n\t\t\treturn res.status(404).json({succuss:false, msg: 'Dish not found'});\r\n\t\t}\r\n\t\treturn res.json(dish);\r\n\t} \r\n\r\n\tif (arr.indexOf(`${selection}`)!= -1) {\r\n\t\tswitch(selection) {\r\n\t\t\tcase 'likes':\r\n\t\t\t\tconst likes = await Like.find({dish: dish._id});\r\n\t\t\t\treturn res.json(likes);\r\n\t\t\tbreak;\r\n\t\t\tcase 'comments':\r\n\t\t\t\tconst comments = await Comment.find({dish: dish._id});\r\n\t\t\t\treturn res.json(comments);\r\n\t\t\tbreak;\r\n\t\t\tcase 'toppings':\r\n\t\t\t\treturn res.json(dish.toppings);\r\n\t\t\tbreak;\r\n\t\t\tcase 'locations':\r\n\t\t\t\treturn res.json(dish.locations);\r\n\t\t\tbreak;\r\n\t\t\tcase 'composition':\r\n\t\t\t\treturn res.json(dish.composition);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\treturn res.status(400).json({success: false, msg: 'Bad Request'});\r\n\t}\r\n\t\r\n\r\n\t\r\n\r\n\t\r\n\r\n\t /*else {\r\n\t\tconst dishes = await Dish.findOne({name: dishId});\r\n\t\treturn res.send(dishes[`${selection}`]);\r\n\t}*/\r\n\t\r\n})\r\n\r\n\r\n\r\n// Add Product\r\nrouter.post('', async (req, res) => {\r\n\t\r\n\tconst data = req.body;\r\n\r\n\t// if dish.name will primary\r\n\t/*const dishName = await Dish.findOne({name: data.dish.name});\r\n\tif (dishName) return res.json({success: false, msg: 'Dish already exist'});*/\r\n\r\n\t// can use addDish function:\r\n\t/*try {\r\n\t\tconst result = await addDish(data);\r\n\t\treturn res.json(result);\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json(err);\r\n\t}*/\r\n\r\n\r\n\ttry {\r\n\t\tconst dish = new Dish(data.dish);\r\n\t\tawait dish.save();\r\n\t\treturn res.json(dish);\r\n\t} catch(err) {\r\n\t\tthrow err;\r\n\t}\r\n})\r\n\r\nexport default router;\r\n\r\n\t/*const data = req.body;\r\n\tlet newComment = new Comment(data);\r\n\r\n\ttry {\r\n\t\tconst comment = await newComment.save();\r\n\t\treturn res.json(comment);\r\n\t} catch(err) {\r\n\t\tres.status(500).json('err');\r\n\t}*/","const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from '../models/user';\r\nimport config from '../config/index';\r\n\r\nexport default async function Passport(passport){\r\n\tlet opts = {};\r\n\topts.jwtFromRequest = ExtractJwt.fromAuthHeader();\r\n\topts.secretOrKey = config.secret;\r\n\tpassport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(jwt_payload);\r\n\t\t\tconst user = await User.findOne({phone: jwt_payload.phone});\r\n\t\t\tconsole.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\treturn done(null, user);\r\n\t\t\t} else done(null, false);\r\n\t\t} catch(err) {\r\n\t\t\treturn done(err, false);\r\n\t\t}\r\n\t}))\r\n}","import express from 'express';\r\nimport cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport Promise from 'bluebird';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport config from './config/index';\r\nimport users from './routes/users';\r\nimport dishes from './routes/dishes';\r\nimport Passport from './config/passport';\r\n\r\n\r\n\r\n\r\nconst app = express();\r\nvar bodyParser = require('body-parser');\r\nPassport(passport);\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public'))); \r\nconst port = 3000;\r\n\r\n\r\nmongoose.Promise = Promise;\r\n// Connect to Database\r\nmongoose.connect(config.database);\r\n// On connection\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('connected to database' + config.database);\r\n});\r\n// On Error\r\nmongoose.connection.on('error', (err) => {\r\n\tconsole.log('database error' + err);\r\n});\r\n\r\n\r\napp.use('/users', users);\r\napp.use('/dishes', dishes);\r\n\r\n\r\napp.get('/', (req, res) => {\r\n\tres.send('dratuti');\r\n})\r\n\r\napp.listen(port, () => {\r\n\tconsole.log('yep' + port);\r\n})"],"names":["mongoose","Promise","UserSchema","Schema","String","methods","getUserById","userId","User","findById","id","statics","hashPassword","password","bcrypt","genSalt","hash","salt","comparePassword","candidatePassword","log","compare","isMatch","model","LikeSchema","Types","ObjectId","CommentSchema","Number","router","express","Router","post","req","res","body","findOne","phone","data","exist","json","success","msg","user","save","jwt","sign","config","secret","token","status","get","passport","authenticate","session","params","selection","find","users","RegExp","match","re","_id","succuss","arr","indexOf","Like","likes","Comment","comments","update","$set","changes","Error_name","name","Error_msg","message","DishSchema","Boolean","ToppingSchema","LocationSchema","elem","test","Topping","toppings","Location","locations","dishId","Dish","dishes","dish","composition","JwtStrategy","require","Strategy","ExtractJwt","jwtFromRequest","fromAuthHeader","secretOrKey","use","opts","jwt_payload","done","Passport","app","bodyParser","cors","initialize","static","path","join","__dirname","port","connect","database","connection","on","err","send","listen"],"mappings":"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"}