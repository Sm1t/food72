{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/models/user.js","../src/models/employee.js","../src/config/passport.js","../src/models/like.js","../src/models/comment.js","../src/middleware/checkId.js","../src/resources/ifModifiedSince.js","../src/resources/getLastModified.js","../src/resources/testDefaultRoutes.js","../src/routes/users.js","../src/models/dish.js","../src/routes/dishes.js","../src/models/location.js","../src/routes/locations.js","../src/routes/likes.js","../src/routes/comments.js","../src/models/topping.js","../src/routes/toppings.js","../src/helpers/getUniqueNumber.js","../src/models/order.js","../src/routes/orders.js","../src/routes/employees.js","../src/models/shedule.js","../src/routes/shedules.js","../src/index.js"],"sourcesContent":["export default {\r\n\tdatabase: 'mongodb://sm1t:34ezezin@ds145299.mlab.com:45299/food72',\r\n\tsecret: 'yoursecret'\r\n}","import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\nimport Promise from 'bluebird';\r\nimport _ from 'lodash';\r\nmongoose.Promise = Promise;\r\n\r\nconst UserSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tphone: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\temail: {\r\n\t\ttype: String\r\n\t},\r\n\tavatar: {\r\n\t\ttype: String,\r\n\t\tdefault: ''\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nUserSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'phone', 'email', 'avatar']);\r\n}\r\n\r\nUserSchema.pre('save', function(next) {\r\n\treturn bcrypt.genSalt(10)\r\n\t.then(salt => {\r\n\t\tbcrypt.hash(this.password, salt)\r\n\t\t.then(hash => {\r\n\t\t\tthis.password = hash;\r\n\t\t\tnext();\r\n\t\t})\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n\r\n\r\n","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst EmployeeSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tsurname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tposition: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tlogin: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trole: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'employee'\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nEmployeeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'surname', 'position']);\r\n}\r\n\r\nEmployeeSchema.pre('save', function(next) {\r\n\treturn bcrypt.genSalt(10)\r\n\t.then(salt => {\r\n\t\tbcrypt.hash(this.password, salt)\r\n\t\t.then(hash => {\r\n\t\t\tthis.password = hash;\r\n\t\t\tnext();\r\n\t\t})\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nexport default mongoose.model('Employee', EmployeeSchema);\r\n\r\n\r\n","const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from '../models/user';\r\nimport Employee from '../models/employee';\r\nimport config from '../config/index';\r\n\r\nexport default async function Passport(passport){\r\n\tlet opts = {};\r\n\topts.jwtFromRequest = ExtractJwt.fromAuthHeader();\r\n\topts.secretOrKey = config.secret;\r\n\tpassport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\r\n\t\ttry {\r\n\t\t\tif (jwt_payload.login) {\r\n\t\t\t\tvar user = await Employee.findOne({login: jwt_payload.login});\r\n\t\t\t}\r\n\t\t\tif (jwt_payload.phone) {\r\n\t\t\t\tvar user = await User.findOne({phone: jwt_payload.phone});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\treturn done(null, user);\r\n\t\t\t} else done(null, false);\r\n\t\t} catch(err) {\r\n\t\t\treturn done(err, false);\r\n\t\t}\r\n\t}))\r\n}","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\nconst { Schema } = mongoose;\r\n\r\nconst LikeSchema = mongoose.Schema({\r\n\tdishId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nLikeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['dishId', 'userId']);\r\n}\r\n\r\nexport default mongoose.model('Like', LikeSchema);\r\n\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst CommentSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t},\r\n\ttext: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\nexport default mongoose.model('Comment', CommentSchema);","export default (req, res, next) => {\r\n\tconst id = req.params.id;\r\n\tif (!id) return next();\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!id.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: `Incorrect id`});\r\n\t}\r\n\treturn next();\r\n}","export default async (model, modifiedSince) => {\r\n\tmodifiedSince = new Date(Date.parse(modifiedSince));\r\n\tlet news = await model.find({\"updatedAt\": {$gt: modifiedSince}});\r\n\tif (news[0]) {\r\n\t\tlet lastModified = news.reduce(function(prev, candidate) {\r\n\t\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t\t});\r\n\t\tlastModified = Date.parse(lastModified.updatedAt);\r\n\t\tconst opts = {\r\n\t\t\tyear: 'numeric',\r\n\t\t\tmonth: 'short',\r\n\t\t\tday: 'numeric',\r\n\t\t\tweekday: 'short',\r\n\t\t\thour: 'numeric',\r\n\t\t\tminute: 'numeric',\r\n\t\t\tsecond: 'numeric',\r\n\t\t\ttimeZoneName: 'short',\r\n\t\t\thour12: false\r\n\t\t};\r\n\t\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\t\treturn {\r\n\t\t\tnews,\r\n\t\t\tlastModified\r\n\t\t}\r\n\t} else {\r\n\t\treturn;\r\n\t}\r\n}","export default async (model) => {\r\n\tconst arr = await model.find();\r\n\tif (!arr[0]) return;\r\n\tlet lastModified = arr.reduce(function(prev, candidate) {\r\n\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t});\r\n\tlastModified = Date.parse(lastModified.updatedAt);\r\n\tconst opts = {\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'short',\r\n\t\tday: 'numeric',\r\n\t\tweekday: 'short',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric',\r\n\t\tsecond: 'numeric',\r\n\t\ttimeZoneName: 'short',\r\n\t\thour12: false\r\n\t};\r\n\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\treturn lastModified;\r\n}","import express from 'express';\r\nimport access from '../middleware/access';\r\nimport checkId from '../middleware/checkId';\r\nimport ifModifiedSince from '../resources/ifModifiedSince';\r\nimport getLastModified from '../resources/getLastModified';\r\n\r\nexport default class defaultRoutes {\r\n\tconstructor(params) {\r\n\t\tObject.assign(this, params);\r\n\t\tthis.router = express.Router();\r\n\t}\r\n\r\n\tinit(model, modelName) {\r\n\t\tthis.initGet(model, modelName);\r\n\t\tthis.initPost(model, modelName);\r\n\t\tthis.initPut(model, modelName);\r\n\t\tthis.initDelete(model, modelName);\r\n\t}\r\n\t\r\n\tinitGet(model, modelName) {\r\n\t\tthis.router.get('/:id?/:select?', checkId, this.getMiddlewares || [], async(req, res, next) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\tconst select = req.params.select;\r\n\r\n\t\t\tif (!id && !select) {\r\n\t\t\t\tlet modifiedSince = req.headers['if-modified-since'];\r\n\t\t\t\tif (modifiedSince) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst changes = await ifModifiedSince(model, modifiedSince);\r\n\t\t\t\t\t\tif (changes) {\r\n\t\t\t\t\t\t\tres.set('Last-Modified', changes.lastModified);\r\n\t\t\t\t\t\t\treturn res.json(changes.news);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn res.status(304).send();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tnext(err);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (req.user && req.user.phone) {\r\n\t\t\t\t\t\treturn res.json(await model.find({userId: req.user._id}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst lastModified = await getLastModified(model);\r\n\t\t\t\t\tres.set('Last-Modified', lastModified);\r\n\t\t\t\t\treturn res.json(await model.find());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\t\t\tif (!id.match(re)) {\r\n\t\t\t\treturn res.status(400).json({success: false, msg: `Incorrect ${modelName} id`})\r\n\t\t\t}\r\n\r\n\t\t\tif (id && !select) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\t\tif (!elem) return res.status(404).json({success: false, msg: `${modelName} not found`})\r\n\t\t\t\t\treturn res.json(elem);\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tnext(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem[`${select}`]) return res.json({success: false, msg: `Cannot select ${select}`});\r\n\t\t\t\treturn res.json(elem[`${select}`]);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitPost(model, modelName) {\r\n\t\tthis.router.post('', this.postMiddlewares || [], async(req, res, next) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!this.canRepeated || this.canRepeated != true) {\r\n\t\t\t\t\tconst exist = await model.findOne(req.body);\r\n\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\treturn res.status(400).json({success: false, msg: `${modelName} aready exist`});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.user && req.user._id) {\r\n\t\t\t\t\tvar elem = new model(Object.assign(req.body, {userId: req.user._id}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar elem = new model(req.body);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tawait elem.save();\r\n\t\t\t\treturn res.status(201).json(elem);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitPut(model, modelName) {\r\n\t\tthis.router.put('/:id', checkId, this.putMiddlewares || [], async(req, res, next) => {\r\n\t\t\tconst id = req.params.id;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait model.update({_id: id}, {$set:\r\n\t\t\t\t\treq.body\r\n\t\t\t\t});\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} updated`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitDelete(model, modelName) {\r\n\t\tthis.router.delete('/:id', checkId, this.deleteMiddlewares || [], async(req, res, next) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait elem.remove();\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} deleted`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","import passport from 'passport';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\nimport bcrypt from 'bcryptjs';\r\nimport User from '../models/user';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\n\r\nconst defaultUsers = new testDefaultRoutes();\r\n\r\n// Register\r\ndefaultUsers.router.post('', async(req, res) => {\r\n\tconst exist = await User.findOne({phone: req.body.phone});\r\n\tif (exist) return res.status(400).json({success: false, msg: 'User already exist'});\r\n\r\n\ttry {\r\n\t\tconst user = new User(req.body),\r\n\t\t\t  phone = user.phone;\r\n\t\tuser.save();\r\n\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// login\r\ndefaultUsers.router.post('/login', async(req, res) => {\r\n\tconst phone = req.body.phone,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst user = await User.findOne({phone: phone});\r\n\tif (!user) return res.status(404).json({success: false, msg: \"User not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, user.password)) {\r\n\t\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(['/dishes', 'toppings', '/locations'].indexOf(req.path));\r\n})\r\n\r\ndefaultUsers.init(User, 'user');\r\n\r\nexport default defaultUsers.router;\r\n\r\n","import mongoose from 'mongoose';\r\nimport Like from './like';\r\nimport { Schema } from 'mongoose';\r\nimport _ from 'lodash';\r\n\r\n// Product Schema\r\nconst DishSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tcategory : {\r\n\t\ttype: String\r\n\t},\r\n\ttoppings: [\r\n\t\t{\r\n\t\t\ttoppingId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Topping',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tdishPicture: {\r\n\t\ttype: String\r\n\t},\r\n\tcallories: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tdescription: {\r\n\t\ttype: String\r\n\t},\r\n\tcomposition: [\r\n\t\t{\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tconteiner: {\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tprice: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t},\r\n\tproteins: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tcarbohydrates: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tfats: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\tdefault: 5\r\n\t},\r\n\tlikes: {\r\n\t\ttype: Number,\r\n\t\trequired: true,\r\n\t\tdefault: 0\r\n\t},\r\n\tactive: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nexport default mongoose.model('Dish', DishSchema);\r\n","import Dish from '../models/dish';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport ifModifiedSince from '../resources/ifModifiedSince';\r\n\r\nconst defaultDishes = new testDefaultRoutes();\r\n\r\ndefaultDishes.init(Dish, 'dish');\r\n\r\nexport default defaultDishes.router;","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst LocationSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tworkTime: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Shedule',\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Location', LocationSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Location from '../models/location';\r\n\r\n\r\nconst defaultLocations = new testDefaultRoutes();\r\ndefaultLocations.init(Location, 'locations');\r\n\r\nexport default defaultLocations.router;","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Like from '../models/like';\r\nimport Dish from '../models/dish';\r\nimport checkId from '../middleware/checkId';\r\nimport passport from 'passport';\r\n\r\nconst defaultLikes = new testDefaultRoutes();\r\n\r\ndefaultLikes.router.post('', passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tconst exist = await Like.findOne({dishId: req.body.dishId, userId: req.user._id});\r\n\t\tif (exist) {\r\n\t\t\tawait exist.remove();\r\n\t\t\tawait Dish.update({_id: exist.dishId, $isolated: true}, {$inc:\r\n\t\t\t\t{\r\n\t\t\t\t\tlikes: -1,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\treturn res.json({success: true, msg: 'Like deleted'});\r\n\t\t}\r\n\t\tconst newLike = new Like(Object.assign({}, req.body, {userId: req.user._id}));\r\n\t\tawait newLike.save();\r\n\t\tawait Dish.update({_id: newLike.dishId, $isolated: true}, {$inc:\r\n\t\t\t{\r\n\t\t\t\tlikes: 1\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res.status(201).json(newLike);\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultLikes.initGet(Like, 'like');\r\n\r\nexport default defaultLikes.router;\r\n","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Comment from '../models/comment';\r\n\r\nconst defaultComments = new testDefaultRoutes();\r\ndefaultComments.init(Comment, 'comments');\r\n\r\nexport default defaultComments.router;","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst ToppingSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Topping', ToppingSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Topping from '../models/topping';\r\n\r\nconst defaultToppings = new testDefaultRoutes();\r\ndefaultToppings.init(Topping, 'topping');\r\n\r\nexport default defaultToppings.router;","import Order from '../models/order';\r\n\r\nexport default async () => {\r\n\tconst arr = [...Array(10).keys()].splice(1);\r\n\tconst orders = await Order.find();\r\n\tconst usedNumbers = [];\r\n\torders.map(order => {\r\n\t\tusedNumbers.push(order.number);\r\n\t})\r\n\tconst unique = arr.filter((value) => {\r\n\t\treturn usedNumbers.indexOf(value) == -1;\r\n\t});\r\n\treturn unique[0];\r\n}","import mongoose from 'mongoose';\r\nimport getUniqueNumber from '../helpers/getUniqueNumber';\r\nconst { Schema } = mongoose;\r\nimport _ from 'lodash';\r\n\r\nconst OrderSchema = mongoose.Schema({\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User'\r\n\t},\r\n\tdishes: [\r\n\t\t{\r\n\t\t\tdishId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Dish',\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdefault: 1\r\n\t\t\t},\r\n\t\t\t_id: false\r\n\t\t}\r\n\t],\r\n\tpayStatus: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tcompleted: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tstatus: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'Обратывается'\r\n\t},\r\n\ttotalPrice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\ttime: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nOrderSchema.pre('save', function(next) {\r\n\treturn getUniqueNumber()\r\n\t.then(unique => {\r\n\t\tthis.number = unique;\r\n\t\tnext();\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nOrderSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'userId', 'dishes', 'payStatus', 'completed', 'status', 'totalPrice', 'time', 'number']);\r\n}\r\n\r\nexport default mongoose.model('Order', OrderSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Order from '../models/order';\r\nimport passport from 'passport';\r\n\r\nconst params = {\r\n\tpostMiddlewares: [\r\n\t\tpassport.authenticate('jwt', {session: false})\r\n\t],\r\n\tcanRepeated: true\r\n}\r\n\r\nconst defaultOrders = new testDefaultRoutes(params);\r\ndefaultOrders.init(Order, 'order');\r\n\r\nexport default defaultOrders.router;","import passport from 'passport';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Employee from '../models/employee';\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\n\r\nconst params = {\r\n\tgetMiddlewares:[], //middlewares for 'get' request\r\n\tpostMiddlewares:[], //middlewares for 'post' request\r\n\tdeleteMiddlewares:[], //middlewares for 'delete' request\r\n\tputMiddlewares:[] //middlewares for 'put' request\r\n}\r\n\r\nconst defaultEmployees = new testDefaultRoutes(params);\r\n\r\n// Register\r\ndefaultEmployees.router.post('', async(req, res) => {\r\n\tconst exist = await Employee.findOne({login: req.body.login});;\r\n\tif (exist) return res.status(400).json({success: false, msg: 'Employee already exist'});\r\n\r\n\ttry {\r\n\t\tconst employee = new Employee(req.body),\r\n\t\t\t  login = employee.login;\r\n\t\temployee.save();\r\n\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// Authenticate\r\ndefaultEmployees.router.post('/login', async(req, res) => {\r\n\tconst login = req.body.login,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst employee = await Employee.findOne({login: login});\r\n\tif (!employee) return res.status(404).json({success: false, msg: \"Employee not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, employee.password)) {\r\n\t\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultEmployees.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(req.user);\r\n})\r\n\r\n\r\ndefaultEmployees.initGet(Employee, 'employees');\r\ndefaultEmployees.initPut(Employee, 'employees');\r\n\r\nexport default defaultEmployees.router;","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst daySchema = new Schema({\r\n\tworkTime: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tbreak: [\r\n\t\t{\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t]\r\n}, {\r\n\t_id: false\r\n})\r\n\r\n\r\n\r\nconst SheduleSchema = mongoose.Schema({\r\n\tmonday: daySchema,\r\n\ttuesday: daySchema,\r\n\twednesday: daySchema,\r\n\tthursday: daySchema,\r\n\tfriday: daySchema,\r\n\tsaturday: daySchema,\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\n\r\nexport default mongoose.model('Shedule', SheduleSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Shedule from '../models/shedule';\r\nimport checkId from '../middleware/checkId';\r\nimport passport from 'passport';\r\n\r\n\r\nconst params = {\r\n\tgetMiddlewares:[\r\n\t\t/*passport.authenticate('jwt', {session: false}),\r\n\t\t(req, res, next) => {\r\n\t\t\tif (req.user && req.user.login) {\r\n\t\t\t\treturn next();\r\n\t\t\t}\r\n\t\t\treturn res.json({success: false, msg: 'access denied'})\r\n\t\t}*/\r\n\t], //middlewares for 'get' request\r\n\tpostMiddlewares:[], //middlewares for 'post' request\r\n\tdeleteMiddlewares:[], //middlewares for 'delete' request\r\n\tputMiddlewares:[] //middlewares for 'put' request\r\n}\r\n\r\nconst defaultShedules = new testDefaultRoutes(params);\r\ndefaultShedules.init(Shedule, 'shedules');\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*defaultShedules.router.get('', async(req, res, next) => {\r\n\ttry {\r\n\r\n\t} catch(err) {\r\n\t\tnetx(err);\r\n\t}\r\n})\r\n\r\ndefaultShedules.initPost(Shedule, 'shedules');\r\ndefaultShedules.initChange(Shedule, 'shedules');\r\ndefaultShedules.initDelete(Shedule, 'shedules');*/\r\n\r\nexport default defaultShedules.router;","import express from 'express';\r\nimport cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport Promise from 'bluebird';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport config from './config/index';\r\nimport Passport from './config/passport';\r\nimport users from './routes/users';\r\nimport dishes from './routes/dishes';\r\nimport locations from './routes/locations';\r\nimport likes from './routes/likes';\r\nimport comments from './routes/comments';\r\nimport toppings from './routes/toppings';\r\nimport orders from './routes/orders';\r\nimport employees from './routes/employees';\r\nimport shedules from './routes/shedules';\r\nimport Topping from './models/topping';\r\n\r\n\r\n\r\nconst app = express();\r\nvar bodyParser = require('body-parser');\r\nPassport(passport);\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public'))); \r\napp.use('/static', express.static(path.join(__dirname, 'jenya')));\r\nconst port = 3000;\r\n\r\n\r\nmongoose.Promise = Promise;\r\n// Connect to Database\r\nmongoose.connect(config.database);\r\n// On connection\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('connected to database ' + config.database);\r\n});\r\n// On Error\r\nmongoose.connection.on('error', (err) => {\r\n\tconsole.log('database error' + err);\r\n});\r\n\r\napp.get('/', (req, res) => {\r\n\tres.send('dratuti');\r\n});\r\n\r\napp.use('/users', users);\r\napp.use('/dishes', dishes);\r\napp.use('/locations', locations);\r\napp.use('/likes', likes);\r\napp.use('/comments', comments);\r\napp.use('/toppings', toppings);\r\napp.use('/orders', orders);\r\napp.use('/employees', employees);\r\napp.use('/shedules', shedules);\r\n\r\napp.use((req, res, next) => {\r\n\treturn res.status(404).json({msg: '404 Not Found'});\r\n})\r\n\r\napp.use((err, req, res, next) => {\r\n\tconsole.log(err);\r\n\treturn res.status(500).json({success: false, msg: err.name});\r\n})\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n\tconsole.log('yep' + port);\r\n})"],"names":["mongoose","Promise","UserSchema","Schema","String","methods","toJSON","_","pick","pre","next","bcrypt","genSalt","then","hash","password","salt","catch","model","EmployeeSchema","JwtStrategy","require","Strategy","ExtractJwt","passport","jwtFromRequest","fromAuthHeader","secretOrKey","config","secret","use","opts","jwt_payload","done","login","Employee","findOne","phone","User","user","Passport","LikeSchema","Types","ObjectId","CommentSchema","Number","req","res","id","params","re","RegExp","match","status","json","success","msg","modifiedSince","Date","parse","find","$gt","news","reduce","prev","candidate","updatedAt","lastModified","toLocaleString","arr","defaultRoutes","router","express","Router","modelName","initGet","initPost","initPut","initDelete","get","checkId","getMiddlewares","select","headers","ifModifiedSince","changes","set","send","userId","_id","getLastModified","findById","elem","post","postMiddlewares","canRepeated","body","exist","save","put","putMiddlewares","update","$set","delete","deleteMiddlewares","remove","defaultUsers","testDefaultRoutes","jwt","sign","expiresIn","token","log","name","compare","authenticate","session","indexOf","path","init","DishSchema","Boolean","defaultDishes","Dish","LocationSchema","defaultLocations","Location","defaultLikes","Like","dishId","$isolated","$inc","newLike","defaultComments","Comment","ToppingSchema","defaultToppings","Topping","Array","keys","splice","Order","map","push","order","number","filter","value","usedNumbers","unique","OrderSchema","getUniqueNumber","defaultOrders","defaultEmployees","employee","daySchema","SheduleSchema","defaultShedules","Shedule","app","bodyParser","cors","initialize","static","join","__dirname","port","connect","database","connection","on","err","users","dishes","locations","likes","comments","toppings","orders","employees","shedules","listen"],"mappings":"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"}