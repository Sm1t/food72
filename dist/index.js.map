{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/models/user.js","../src/config/passport.js","../src/models/like.js","../src/models/comment.js","../src/models/trace.js","../src/resources/defaultRoutes.js","../src/routes/users.js","../src/models/dish.js","../src/routes/dishes.js","../src/models/location.js","../src/routes/locations.js","../src/routes/likes.js","../src/routes/comments.js","../src/models/topping.js","../src/routes/toppings.js","../src/models/order.js","../src/routes/orders.js","../src/index.js"],"sourcesContent":["export default {\r\n\tdatabase: 'mongodb://sm1t:34ezezin@ds145299.mlab.com:45299/food72',\r\n\tsecret: 'yoursecret'\r\n}","import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\nimport Promise from 'bluebird';\r\nimport _ from 'lodash';\r\nmongoose.Promise = Promise;\r\n\r\nconst UserSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tphone: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\temail: {\r\n\t\ttype: String\r\n\t},\r\n\tavatar: {\r\n\t\ttype: String,\r\n\t\tdefault: ''\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nUserSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'phone', 'email', 'avatar']);\r\n}\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n\r\n\r\n","const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from '../models/user';\r\nimport config from '../config/index';\r\n\r\nexport default async function Passport(passport){\r\n\tlet opts = {};\r\n\topts.jwtFromRequest = ExtractJwt.fromAuthHeader();\r\n\topts.secretOrKey = config.secret;\r\n\tpassport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(jwt_payload);\r\n\t\t\tconst user = await User.findOne({phone: jwt_payload.phone});\r\n\t\t\tconsole.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\treturn done(null, user);\r\n\t\t\t} else done(null, false);\r\n\t\t} catch(err) {\r\n\t\t\treturn done(err, false);\r\n\t\t}\r\n\t}))\r\n}","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst LikeSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t}\r\n});\r\n\r\n\r\nexport default mongoose.model('Like', LikeSchema);\r\n\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst CommentSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t},\r\n\ttext: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\nexport default mongoose.model('Comment', CommentSchema);","import mongoose from 'mongoose';\r\n\r\nconst TraceSchema = mongoose.Schema({\r\n\theaders: {}\r\n})\r\n\r\nexport default mongoose.model('Trace', TraceSchema);","import express from 'express';\r\nimport Trace from '../models/trace';\r\n\r\nexport default class defaultRoutes {\r\n\tconstructor() {\r\n\t\tthis.router = express.Router();\r\n\t}\r\n\t\r\n\tinit(model, modelName) {\r\n\t\tthis.router.get('/:id?/:select?', async(req, res) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\tconst select = req.params.select;\r\n\r\n\t\t\tif (!id && !select) {\r\n\t\t\t\tlet modifiedSince = req.headers['if-modified-since'];\r\n\t\t\t\tif (modifiedSince) {\r\n\t\t\t\t\t/*if (modifiedSince === \"1970-01-01T00:00:00.000Z\") {\r\n\t\t\t\t\t\tconst compare = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst compare = false\r\n\t\t\t\t\t}*/\r\n\t\t\t\t\tconst compare = (modifiedSince === \"1970-01-01T00:00:00.000Z\");\r\n\t\t\t\t\tconst result = Object.assign({}, req.headers, {compare: compare});\r\n\t\t\t\t\tawait (new Trace({headers: result})).save();\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet news = await model.find({\"updatedAt\": {$gt: modifiedSince}});\r\n\t\t\t\t\t\tif (news[0]) {\r\n\t\t\t\t\t\t\tlet lastModified = news.reduce(function(prev, candidate) {\r\n\t\t\t\t\t\t\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres.header({'Last-Modified': JSON.stringify(lastModified.updatedAt)});\r\n\t\t\t\t\t\t\treturn res.json(news);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn res.status(304).send();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\treturn res.status(500).json({success: false, msg: err.name});\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn res.json(await model.find());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\t\t\tif (!id.match(re)) {\r\n\t\t\t\treturn res.status(400).json({success: false, msg: `Incorrect ${modelName} id`})\r\n\t\t\t}\r\n\r\n\t\t\tif (id && !select) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\t\tif (!elem) return res.status(404).json({success: false, msg: `${modelName} not found`})\r\n\t\t\t\t\treturn res.json(elem);\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem[`${select}`]) return res.json({success: false, msg: `Cannot select ${select}`});\r\n\t\t\t\treturn res.json(elem[`${select}`]);\r\n\t\t\t} catch(err) {\r\n\t\t\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\r\n\t\tthis.router.post('/:id?', async(req, res) => {\r\n\t\t\tconst id = req.params.id;\r\n\r\n\t\t\tif (!id) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst elem = new model(req.body);\r\n\t\t\t\t\tawait elem.save();\r\n\t\t\t\t\treturn res.status(201).json(elem);\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\t\t\tif (!id.match(re)) {\r\n\t\t\t\treturn res.status(400).json({success: false, msg: `Incorrect ${modelName} id`});\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\r\n\t\t\t\tif (req.body.delete) {\r\n\t\t\t\t\tawait elem.remove();\r\n\t\t\t\t\treturn res.json({success: true, msg: `${modelName} deleted`});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tawait model.update({_id: id}, {$set:\r\n\t\t\t\t\treq.body\r\n\t\t\t\t});\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} updated`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","import passport from 'passport';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\nimport bcrypt from 'bcryptjs';\r\nimport User from '../models/user';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\nimport defaultRoutes from '../resources/defaultRoutes';\r\n\r\nconst defaultUsers = new defaultRoutes();\r\n\r\n// Register\r\ndefaultUsers.router.post('', async(req, res) => {\r\n\tconst exist = await User.findOne({phone: req.body.phone});;\r\n\tif (exist) return res.status(400).json({success: false, msg: 'User already exist'});\r\n\r\n\ttry {\r\n\t\tconst user = new User(req.body),\r\n\t\t\t  phone = user.phone,\r\n\t\t\t  salt = await bcrypt.genSalt(10),\r\n\t\t \t  hash = await bcrypt.hash(user.password, salt);\r\n\t\tuser.password = hash;\r\n\t\tuser.save();\r\n\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// Authenticate\r\ndefaultUsers.router.post('/authenticate', async(req, res) => {\r\n\tconst phone = req.body.phone,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst user = await User.findOne({phone: phone});\r\n\tif (!user) return res.status(404).json({success: false, msg: \"User not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, user.password)) {\r\n\t\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.get('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json({user: req.user});\r\n})\r\n\r\ndefaultUsers.init(User, 'user');\r\n\r\nexport default defaultUsers.router;\r\n\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\nimport _ from 'lodash';\r\n\r\n// Product Schema\r\nconst DishSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tcategory : {\r\n\t\ttype: String\r\n\t},\r\n\tlocations: [\r\n\t\t{\r\n\t\t\tlocationId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Location',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\ttoppings: [\r\n\t\t{\r\n\t\t\ttoppingId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Topping',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tdishPicture: {\r\n\t\ttype: String\r\n\t},\r\n\tcallories: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tdescription: {\r\n\t\ttype: String\r\n\t},\r\n\tcomposition: [\r\n\t\t{\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tconteiner: {\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tprice: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t},\r\n\tproteins: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tcarbohydrates: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tfats: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\tdefault: 5\r\n\t},\r\n\tactive: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n/*DishSchema.methods.toJSON = function() {\r\n\t\r\n}*/\r\n\r\nexport default mongoose.model('Dish', DishSchema);\r\n","import Dish from '../models/dish';\r\nimport defaultRoutes from '../resources/defaultRoutes';\r\n\r\nconst defaultDishes = new defaultRoutes();\r\n\r\ndefaultDishes.router.get('', async (req, res, next) => {\r\n\tconst location = req.query.location;\r\n\tif (location) {\r\n\t\treturn res.json(await Dish.find({ \"locations.locationId\": location }));\r\n\t} else next();\r\n})\r\n\r\ndefaultDishes.init(Dish, 'dishes');\r\n\r\nexport default defaultDishes.router;","import mongoose from 'mongoose';\r\n\r\nconst LocationSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Location', LocationSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Location from '../models/location';\r\n\r\n\r\nconst defaultLocations = new defaultRoutes();\r\ndefaultLocations.init(Location, 'locations');\r\n\r\nexport default defaultLocations.router;","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Like from '../models/like';\r\n\r\nconst defaultLikes = new defaultRoutes();\r\ndefaultLikes.init(Like, 'likes');\r\n\r\nexport default defaultLikes.router;","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Comment from '../models/comment';\r\n\r\nconst defaultComments = new defaultRoutes();\r\ndefaultComments.init(Comment, 'comments');\r\n\r\nexport default defaultComments.router;","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst ToppingSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Topping', ToppingSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Topping from '../models/topping';\r\n\r\nconst defaultToppings = new defaultRoutes();\r\ndefaultToppings.init(Topping, 'toppings');\r\n\r\nexport default defaultToppings.router;","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst OrderSchema = mongoose.Schema({\r\n\tdishes: [\r\n\t\t{\r\n\t\t\tdishId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Dish',\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdefault: 1\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tpayStatus: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tcompleted: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tstatus: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'Обратывается'\r\n\t},\r\n\ttotalPrice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\ttime: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nexport default mongoose.model('Order', OrderSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Order from '../models/order';\r\n\r\nconst defaultOrders = new defaultRoutes();\r\ndefaultOrders.init(Order, 'likes');\r\n\r\nexport default defaultOrders.router;","import express from 'express';\r\nimport cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport Promise from 'bluebird';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport config from './config/index';\r\nimport Passport from './config/passport';\r\nimport users from './routes/users';\r\nimport dishes from './routes/dishes';\r\nimport locations from './routes/locations';\r\nimport likes from './routes/likes';\r\nimport comments from './routes/comments';\r\nimport toppings from './routes/toppings';\r\nimport orders from './routes/orders';\r\n\r\n\r\n\r\nconst app = express();\r\nvar bodyParser = require('body-parser');\r\nPassport(passport);\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public'))); \r\nconst port = 3000;\r\n\r\n\r\nmongoose.Promise = Promise;\r\n// Connect to Database\r\nmongoose.connect(config.database);\r\n// On connection\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('connected to database ' + config.database);\r\n});\r\n// On Error\r\nmongoose.connection.on('error', (err) => {\r\n\tconsole.log('database error' + err);\r\n});\r\n\r\n\r\napp.use('/users', users);\r\napp.use('/dishes', dishes);\r\napp.use('/locations', locations);\r\napp.use('/likes', likes);\r\napp.use('/comments', comments);\r\napp.use('/toppings', toppings);\r\napp.use('/orders', orders);\r\n\r\n\r\napp.get('/', (req, res) => {\r\n\tres.send('dratuti');\r\n})\r\n\r\napp.listen(port, () => {\r\n\tconsole.log('yep' + port);\r\n})"],"names":["mongoose","Promise","UserSchema","Schema","String","methods","toJSON","_","pick","model","JwtStrategy","require","Strategy","ExtractJwt","passport","jwtFromRequest","fromAuthHeader","secretOrKey","config","secret","use","opts","jwt_payload","done","log","User","findOne","phone","user","Passport","LikeSchema","Types","ObjectId","CommentSchema","Number","TraceSchema","defaultRoutes","router","express","Router","modelName","get","req","res","params","id","select","headers","modifiedSince","compare","Trace","result","save","find","$gt","news","reduce","prev","candidate","updatedAt","header","lastModified","json","status","send","success","msg","name","RegExp","match","re","findById","elem","post","body","delete","remove","update","_id","$set","defaultUsers","exist","bcrypt","genSalt","hash","password","salt","jwt","sign","expiresIn","token","authenticate","session","init","DishSchema","Boolean","defaultDishes","next","query","location","Dish","LocationSchema","defaultLocations","Location","defaultLikes","Like","defaultComments","Comment","ToppingSchema","defaultToppings","Topping","OrderSchema","defaultOrders","Order","app","bodyParser","cors","initialize","static","path","join","__dirname","port","connect","database","connection","on","err","users","dishes","locations","likes","comments","toppings","orders","listen"],"mappings":"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"}