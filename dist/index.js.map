{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/models/user.js","../src/models/employee.js","../src/config/passport.js","../src/models/like.js","../src/models/comment.js","../src/middleware/access.js","../src/middleware/checkId.js","../src/resources/defaultRoutes.js","../src/routes/users.js","../src/models/dish.js","../src/resources/ifModifiedSince.js","../src/routes/dishes.js","../src/models/location.js","../src/routes/locations.js","../src/routes/likes.js","../src/routes/comments.js","../src/models/topping.js","../src/routes/toppings.js","../src/models/order.js","../src/routes/orders.js","../src/routes/employees.js","../src/index.js"],"sourcesContent":["export default {\r\n\tdatabase: 'mongodb://sm1t:34ezezin@ds145299.mlab.com:45299/food72',\r\n\tsecret: 'yoursecret'\r\n}","import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\nimport Promise from 'bluebird';\r\nimport _ from 'lodash';\r\nmongoose.Promise = Promise;\r\n\r\nconst UserSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tphone: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\temail: {\r\n\t\ttype: String\r\n\t},\r\n\tavatar: {\r\n\t\ttype: String,\r\n\t\tdefault: ''\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nUserSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'phone', 'email', 'avatar']);\r\n}\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n\r\n\r\n","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\n\r\nconst EmployeeSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tsurname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tposition: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tlogin: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trole: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'employee'\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nEmployeeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'surname', 'position']);\r\n}\r\n\r\nexport default mongoose.model('Employee', EmployeeSchema);\r\n\r\n\r\n","const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from '../models/user';\r\nimport Employee from '../models/employee';\r\nimport config from '../config/index';\r\n\r\nexport default async function Passport(passport){\r\n\tlet opts = {};\r\n\topts.jwtFromRequest = ExtractJwt.fromAuthHeader();\r\n\topts.secretOrKey = config.secret;\r\n\tpassport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\r\n\t\ttry {\r\n\t\t\tif (jwt_payload.login) {\r\n\t\t\t\tvar user = await Employee.findOne({login: jwt_payload.login});\r\n\t\t\t}\r\n\t\t\tif (jwt_payload.phone) {\r\n\t\t\t\tvar user = await User.findOne({phone: jwt_payload.phone});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\treturn done(null, user);\r\n\t\t\t} else done(null, false);\r\n\t\t} catch(err) {\r\n\t\t\treturn done(err, false);\r\n\t\t}\r\n\t}))\r\n}","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\nconst { Schema } = mongoose;\r\n\r\nconst LikeSchema = mongoose.Schema({\r\n\tdishId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nLikeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['dishId', 'userId']);\r\n}\r\n\r\nexport default mongoose.model('Like', LikeSchema);\r\n\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst CommentSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t},\r\n\ttext: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\nexport default mongoose.model('Comment', CommentSchema);","export default (req, res, next) => {\r\n\tconst userAccess = ['/likes', '/comments', '/orders'];\r\n\tconst employeeAccess = ['/dishes', '/toppings', '/locations', '/menu'];\r\n\tconst adminAccess = ['/employees'];\r\n\r\n\tif (req.user) {\r\n\t\tif (adminAccess.indexOf(req.originalUrl) != -1) {\r\n\t\t\tif (req.user.role === 'admin') return next();\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Access denied'});\r\n\t\t}\r\n\r\n\t\tif (employeeAccess.indexOf(req.originalUrl) != -1) {\r\n\t\t\tif (req.user.login) return next();\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Access denied'});;\r\n\t\t}\r\n\r\n\t\tif (userAccess.indexOf(req.originalUrl) != -1) {\r\n\t\t\tif (req.user.phone) return next();\r\n\t\t\treturn res.status(401).json({success: false, msg: 'Unauthorized'});;\r\n\t\t}\r\n\t}\r\n\r\n\treturn res.status(403).json({success: false, msg: 'Access denied'});\r\n}","export default (req, res, next) => {\r\n\tconst id = req.params.id;\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!id.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: `Incorrect ${modelName} id`});\r\n\t}\r\n\treturn next();\r\n}","import express from 'express';\r\nimport passport from 'passport';\r\nimport access from '../middleware/access';\r\nimport checkId from '../middleware/checkId';\r\n\r\nexport default class defaultRoutes {\r\n\tconstructor() {\r\n\t\tthis.router = express.Router();\r\n\t}\r\n\r\n\tinit(model, modelName) {\r\n\t\tthis.initGet(model, modelName);\r\n\t\tthis.initPost(model, modelName);\r\n\t\tthis.initChange(model, modelName);\r\n\t\tthis.initDelete(model, modelName);\r\n\t}\r\n\t\r\n\tinitGet(model, modelName) {\r\n\t\tthis.router.get('/:id?/:select?', passport.authenticate('jwt', {session: false}), access, async(req, res) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\tconst select = req.params.select;\r\n\r\n\t\t\tif (!id && !select) {\r\n\t\t\t\tlet modifiedSince = req.headers['if-modified-since'];\r\n\t\t\t\tif (modifiedSince) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tmodifiedSince = new Date(Date.parse(modifiedSince));\r\n\t\t\t\t\t\tlet news = await model.find({\"updatedAt\": {$gt: modifiedSince}});\r\n\t\t\t\t\t\tif (news[0]) {\r\n\t\t\t\t\t\t\tlet lastModified = news.reduce(function(prev, candidate) {\r\n\t\t\t\t\t\t\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tlastModified = Date.parse(lastModified.updatedAt);\r\n\t\t\t\t\t\t\tconst opts = {\r\n\t\t\t\t\t\t\t\tyear: 'numeric',\r\n\t\t\t\t\t\t\t\tmonth: 'short',\r\n\t\t\t\t\t\t\t\tday: 'numeric',\r\n\t\t\t\t\t\t\t\tweekday: 'short',\r\n\t\t\t\t\t\t\t\thour: 'numeric',\r\n\t\t\t\t\t\t\t\tminute: 'numeric',\r\n\t\t\t\t\t\t\t\tsecond: 'numeric',\r\n\t\t\t\t\t\t\t\ttimeZoneName: 'short',\r\n\t\t\t\t\t\t\t\thour12: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\t\t\t\t\t\t\tres.set('Last-Modified', lastModified);\r\n\t\t\t\t\t\t\treturn res.json(news);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn res.status(304).send();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tnext(err);\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (req.user.phone) {\r\n\t\t\t\t\t\treturn res.json(await model.find({userId: req.user._id}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn res.json(await model.find());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\t\t\tif (!id.match(re)) {\r\n\t\t\t\treturn res.status(400).json({success: false, msg: `Incorrect ${modelName} id`})\r\n\t\t\t}\r\n\r\n\t\t\tif (id && !select) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\t\tif (!elem) return res.status(404).json({success: false, msg: `${modelName} not found`})\r\n\t\t\t\t\treturn res.json(elem);\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tnext(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem[`${select}`]) return res.json({success: false, msg: `Cannot select ${select}`});\r\n\t\t\t\treturn res.json(elem[`${select}`]);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitPost(model, modelName) {\r\n\t\tthis.router.post('', passport.authenticate('jwt', {session: false}), access, async(req, res) => {\r\n\t\t\ttry {\r\n\t\t\t\t/*if (['orders', 'likes', 'comments'].indexOf(modelName) != -1) {\r\n\t\t\t\t\tvar elem = new model(Object.assign({}, req.body, {userId: req.user.id}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar elem = new model(req.body);\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\tconst elem = new model(req.body);\r\n\t\t\t\tawait elem.save();\r\n\t\t\t\treturn res.status(201).json(elem);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitChange(model, modelNmae) {\r\n\t\tthis.router.post('/:id', checkId, passport.authenticate('jwt', {session: false}), access, async(req, res) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst id = req.params.id;\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait model.update({_id: id}, {$set:\r\n\t\t\t\t\treq.body\r\n\t\t\t\t});\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} updated`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitDelete(model, modelName) {\r\n\t\tthis.router.delete('/:id', passport.authenticate('jwt', {session: false}), access, async(req, res) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait elem.remove();\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} deleted`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","import passport from 'passport';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\nimport bcrypt from 'bcryptjs';\r\nimport User from '../models/user';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\nimport defaultRoutes from '../resources/defaultRoutes';\r\n\r\nconst defaultUsers = new defaultRoutes();\r\n\r\n// Register\r\ndefaultUsers.router.post('', async(req, res) => {\r\n\tconst exist = await User.findOne({phone: req.body.phone});\r\n\tif (exist) return res.status(400).json({success: false, msg: 'User already exist'});\r\n\r\n\ttry {\r\n\t\tconst user = new User(req.body),\r\n\t\t\t  phone = user.phone,\r\n\t\t\t  salt = await bcrypt.genSalt(10),\r\n\t\t \t  hash = await bcrypt.hash(user.password, salt);\r\n\t\tuser.password = hash;\r\n\t\tuser.save();\r\n\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// Authenticate\r\ndefaultUsers.router.post('/authenticate', async(req, res) => {\r\n\tconst phone = req.body.phone,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst user = await User.findOne({phone: phone});\r\n\tif (!user) return res.status(404).json({success: false, msg: \"User not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, user.password)) {\r\n\t\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(['/dishes', 'toppings', '/locations'].indexOf(req.path));\r\n})\r\n\r\ndefaultUsers.init(User, 'user');\r\n\r\nexport default defaultUsers.router;\r\n\r\n","import mongoose from 'mongoose';\r\nimport Like from './like';\r\nimport { Schema } from 'mongoose';\r\nimport _ from 'lodash';\r\n\r\n// Product Schema\r\nconst DishSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tcategory : {\r\n\t\ttype: String\r\n\t},\r\n\ttoppings: [\r\n\t\t{\r\n\t\t\ttoppingId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Topping',\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tdishPicture: {\r\n\t\ttype: String\r\n\t},\r\n\tcallories: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tdescription: {\r\n\t\ttype: String\r\n\t},\r\n\tcomposition: [\r\n\t\t{\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tconteiner: {\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tprice: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t},\r\n\tproteins: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tcarbohydrates: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tfats: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\tdefault: 5\r\n\t},\r\n\tlikes: {\r\n\t\ttype: Number,\r\n\t\trequired: true,\r\n\t\tdefault: 0\r\n\t},\r\n\tactive: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nexport default mongoose.model('Dish', DishSchema);\r\n","export default async (model, modifiedSince) => {\r\n\tmodifiedSince = new Date(Date.parse(modifiedSince));\r\n\tlet news = await model.find({\"updatedAt\": {$gt: modifiedSince}});\r\n\tif (news[0]) {\r\n\t\tlet lastModified = news.reduce(function(prev, candidate) {\r\n\t\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t\t});\r\n\t\tlastModified = Date.parse(lastModified.updatedAt);\r\n\t\tconst opts = {\r\n\t\t\tyear: 'numeric',\r\n\t\t\tmonth: 'short',\r\n\t\t\tday: 'numeric',\r\n\t\t\tweekday: 'short',\r\n\t\t\thour: 'numeric',\r\n\t\t\tminute: 'numeric',\r\n\t\t\tsecond: 'numeric',\r\n\t\t\ttimeZoneName: 'short',\r\n\t\t\thour12: false\r\n\t\t};\r\n\t\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\t\treturn {\r\n\t\t\tnews,\r\n\t\t\tlastModified\r\n\t\t}\r\n\t} else {\r\n\t\treturn;\r\n\t}\r\n}","import Dish from '../models/dish';\r\nimport defaultRoutes from '../resources/defaultRoutes';\r\nimport ifModifiedSince from '../resources/ifModifiedSince';\r\n\r\nconst defaultDishes = new defaultRoutes();\r\n\r\ndefaultDishes.router.get('', async (req, res, next) => {\r\n\tconst id = req.params.id;\r\n\tconst select = req.params.select;\r\n\r\n\tif (!id && !select) {\r\n\t\tlet modifiedSince = req.headers['if-modified-since'];\r\n\t\tif (modifiedSince) {\r\n\t\t\ttry {\r\n\t\t\t\tconst changes = await ifModifiedSince(Dish, modifiedSince);\r\n\t\t\t\tif (changes) {\r\n\t\t\t\t\tres.set('Last-Modified', changes.lastModified);\r\n\t\t\t\t\treturn res.json(changes.news);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn res.status(304).send();\r\n\t\t\t\t}\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\t\r\n\t\t\t}\t\r\n\t\t} else {\r\n\t\t\treturn res.json(await Dish.find());\r\n\t\t}\r\n\t}\r\n})\r\n\r\ndefaultDishes.initPost(Dish, 'dishes');\r\ndefaultDishes.initChange(Dish, 'dishes');\r\ndefaultDishes.initDelete(Dish, 'dishes');\r\n\r\nexport default defaultDishes.router;","import mongoose from 'mongoose';\r\n\r\nconst LocationSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Location', LocationSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Location from '../models/location';\r\n\r\n\r\nconst defaultLocations = new defaultRoutes();\r\ndefaultLocations.init(Location, 'locations');\r\n\r\nexport default defaultLocations.router;","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Like from '../models/like';\r\nimport Dish from '../models/dish';\r\nimport checkId from '../middleware/checkId';\r\nimport passport from 'passport';\r\n\r\nconst defaultLikes = new defaultRoutes();\r\n\r\ndefaultLikes.router.post('', passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tconst exist = await Like.findOne({dishId: req.body.dishId, userId: req.user._id});\r\n\t\tif (exist) {\r\n\t\t\tawait Dish.update({_id: exist.dishId}, {$inc:\r\n\t\t\t\t{\r\n\t\t\t\t\tlikes: -1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tawait exist.remove();\r\n\t\t\treturn res.json({success: true, msg: 'мнi тожi похуi'});\r\n\t\t}\r\n\t\tconst newLike = new Like(Object.assign({}, req.body, {userId: req.user._id}));\r\n\t\tawait newLike.save();\r\n\t\tawait Dish.update({_id: newLike.dishId}, {$inc:\r\n\t\t\t{\r\n\t\t\t\tlikes: 1\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res.status(201).json(newLike);\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultLikes.router.post('/:id', checkId, async(req, res, next) => {\r\n\ttry {\r\n\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultLikes.initGet(Like, 'likes');\r\n\r\nexport default defaultLikes.router;\r\n","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Comment from '../models/comment';\r\n\r\nconst defaultComments = new defaultRoutes();\r\ndefaultComments.init(Comment, 'comments');\r\n\r\nexport default defaultComments.router;","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst ToppingSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Topping', ToppingSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Topping from '../models/topping';\r\n\r\nconst defaultToppings = new defaultRoutes();\r\ndefaultToppings.init(Topping, 'toppings');\r\n\r\nexport default defaultToppings.router;","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst OrderSchema = mongoose.Schema({\r\n\tuserId: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User',\r\n\t\trequired: true\r\n\t},\r\n\tdishes: [\r\n\t\t{\r\n\t\t\tdishId: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Dish',\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdefault: 1\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tpayStatus: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tcompleted: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tstatus: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'Обратывается'\r\n\t},\r\n\ttotalPrice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\ttime: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nexport default mongoose.model('Order', OrderSchema);","import defaultRoutes from '../resources/defaultRoutes';\r\nimport Order from '../models/order';\r\n\r\nconst defaultOrders = new defaultRoutes();\r\ndefaultOrders.init(Order, 'orders');\r\n\r\nexport default defaultOrders.router;","import passport from 'passport';\r\nimport defaultRoutes from '../resources/defaultRoutes';\r\nimport Employee from '../models/employee';\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\n\r\nconst defaultEmployees = new defaultRoutes();\r\n\r\n// Register\r\ndefaultEmployees.router.post('', async(req, res) => {\r\n\tconst exist = await Employee.findOne({login: req.body.login});;\r\n\tif (exist) return res.status(400).json({success: false, msg: 'Employee already exist'});\r\n\r\n\ttry {\r\n\t\tconst employee = new Employee(req.body),\r\n\t\t\t  login = employee.login,\r\n\t\t\t  salt = await bcrypt.genSalt(10),\r\n\t\t \t  hash = await bcrypt.hash(employee.password, salt);\r\n\t\temployee.password = hash;\r\n\t\temployee.save();\r\n\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// Authenticate\r\ndefaultEmployees.router.post('/login', async(req, res) => {\r\n\tconst login = req.body.login,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst employee = await Employee.findOne({login: login});\r\n\tif (!employee) return res.status(404).json({success: false, msg: \"Employee not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, employee.password)) {\r\n\t\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultEmployees.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(req.user);\r\n})\r\n\r\n\r\ndefaultEmployees.init(Employee, 'employees');\r\n\r\nexport default defaultEmployees.router;","import express from 'express';\r\nimport cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport Promise from 'bluebird';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport config from './config/index';\r\nimport Passport from './config/passport';\r\nimport users from './routes/users';\r\nimport dishes from './routes/dishes';\r\nimport locations from './routes/locations';\r\nimport likes from './routes/likes';\r\nimport comments from './routes/comments';\r\nimport toppings from './routes/toppings';\r\nimport orders from './routes/orders';\r\nimport employees from './routes/employees';\r\n\r\n\r\n\r\nconst app = express();\r\nvar bodyParser = require('body-parser');\r\nPassport(passport);\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public'))); \r\napp.use('/static', express.static(path.join(__dirname, 'jenya')));\r\nconst port = 3000;\r\n\r\n\r\nmongoose.Promise = Promise;\r\n// Connect to Database\r\nmongoose.connect(config.database);\r\n// On connection\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('connected to database ' + config.database);\r\n});\r\n// On Error\r\nmongoose.connection.on('error', (err) => {\r\n\tconsole.log('database error' + err);\r\n});\r\n\r\napp.get('/', (req, res) => {\r\n\tres.send('dratuti');\r\n});\r\n\r\napp.use('/users', users);\r\napp.use('/dishes', dishes);\r\napp.use('/locations', locations);\r\napp.use('/likes', likes);\r\napp.use('/comments', comments);\r\napp.use('/toppings', toppings);\r\napp.use('/orders', orders);\r\napp.use('/employees', employees);\r\n\r\napp.use((err, req, res, next) => {\r\n\tconsole.log(err);\r\n\treturn res.status(500).json({success: false, msg: err.name});\r\n})\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n\tconsole.log('yep' + port);\r\n})"],"names":["mongoose","Promise","UserSchema","Schema","String","methods","toJSON","_","pick","model","EmployeeSchema","JwtStrategy","require","Strategy","ExtractJwt","passport","jwtFromRequest","fromAuthHeader","secretOrKey","config","secret","use","opts","jwt_payload","done","login","Employee","findOne","phone","User","user","Passport","LikeSchema","Types","ObjectId","CommentSchema","Number","req","res","next","userAccess","employeeAccess","adminAccess","indexOf","originalUrl","role","status","json","success","msg","id","params","re","RegExp","match","modelName","defaultRoutes","router","express","Router","initGet","initPost","initChange","initDelete","get","authenticate","session","access","select","headers","modifiedSince","Date","parse","find","$gt","news","reduce","prev","candidate","updatedAt","lastModified","toLocaleString","set","send","userId","_id","findById","elem","post","body","save","modelNmae","checkId","update","$set","delete","remove","defaultUsers","exist","bcrypt","genSalt","hash","password","salt","jwt","sign","expiresIn","token","log","name","compare","path","init","DishSchema","Boolean","defaultDishes","ifModifiedSince","Dish","changes","LocationSchema","defaultLocations","Location","defaultLikes","Like","dishId","$inc","newLike","err","defaultComments","Comment","ToppingSchema","defaultToppings","Topping","OrderSchema","defaultOrders","Order","defaultEmployees","employee","app","bodyParser","cors","initialize","static","join","__dirname","port","connect","database","connection","on","users","dishes","locations","likes","comments","toppings","orders","employees","listen"],"mappings":"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"}