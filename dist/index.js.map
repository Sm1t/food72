{"version":3,"file":"index.js","sources":["../src/config/index.js","../src/models/user.js","../src/models/employee.js","../src/config/passport.js","../src/models/like.js","../src/models/dish.js","../src/helpers/updateRating.js","../src/models/comment.js","../src/middleware/checkId.js","../src/resources/ifModifiedSince.js","../src/resources/getLastModified.js","../src/resources/testDefaultRoutes.js","../src/routes/users.js","../src/routes/dishes.js","../src/models/location.js","../src/routes/locations.js","../src/routes/likes.js","../src/routes/comments.js","../src/models/topping.js","../src/routes/toppings.js","../src/helpers/getUniqueNumber.js","../src/models/order.js","../src/routes/orders.js","../src/routes/employees.js","../src/index.js"],"sourcesContent":["export default {\r\n\tdatabase: 'mongodb://sm1t:34ezezin@ds145299.mlab.com:45299/food72',\r\n\tsecret: 'yoursecret'\r\n}","import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\nimport Promise from 'bluebird';\r\nimport _ from 'lodash';\r\nmongoose.Promise = Promise;\r\n\r\nconst UserSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tphone: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\temail: {\r\n\t\ttype: String\r\n\t},\r\n\tavatar: {\r\n\t\ttype: String,\r\n\t\tdefault: ''\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nUserSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'phone', 'email', 'avatar']);\r\n}\r\n\r\nUserSchema.pre('save', function(next) {\r\n\treturn bcrypt.genSalt(10)\r\n\t.then(salt => {\r\n\t\tbcrypt.hash(this.password, salt)\r\n\t\t.then(hash => {\r\n\t\t\tthis.password = hash;\r\n\t\t\tnext();\r\n\t\t})\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nexport default mongoose.model('User', UserSchema);\r\n\r\n\r\n","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst EmployeeSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tsurname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tposition: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tlogin: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tpassword: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trole: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'employee'\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nEmployeeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'name', 'surname', 'position']);\r\n}\r\n\r\nEmployeeSchema.pre('save', function(next) {\r\n\treturn bcrypt.genSalt(10)\r\n\t.then(salt => {\r\n\t\tbcrypt.hash(this.password, salt)\r\n\t\t.then(hash => {\r\n\t\t\tthis.password = hash;\r\n\t\t\tnext();\r\n\t\t})\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nexport default mongoose.model('Employee', EmployeeSchema);\r\n\r\n\r\n","const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from '../models/user';\r\nimport Employee from '../models/employee';\r\nimport config from '../config/index';\r\n\r\nexport default async function Passport(passport){\r\n\tlet opts = {};\r\n\topts.jwtFromRequest = ExtractJwt.fromAuthHeader();\r\n\topts.secretOrKey = config.secret;\r\n\tpassport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\r\n\t\ttry {\r\n\t\t\tif (jwt_payload.login) {\r\n\t\t\t\tvar user = await Employee.findOne({login: jwt_payload.login});\r\n\t\t\t}\r\n\t\t\tif (jwt_payload.phone) {\r\n\t\t\t\tvar user = await User.findOne({phone: jwt_payload.phone});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (user) {\r\n\t\t\t\treturn done(null, user);\r\n\t\t\t} else done(null, false);\r\n\t\t} catch(err) {\r\n\t\t\treturn done(err, false);\r\n\t\t}\r\n\t}))\r\n}","import mongoose from 'mongoose';\r\nimport _ from 'lodash';\r\nconst { Schema } = mongoose;\r\n\r\nconst LikeSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User'\r\n\t},\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nLikeSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['dish', 'user']);\r\n}\r\n\r\nexport default mongoose.model('Like', LikeSchema);\r\n\r\n","import mongoose from 'mongoose';\r\nimport Like from './like';\r\nimport { Schema } from 'mongoose';\r\nimport _ from 'lodash';\r\n\r\n// Product Schema\r\nconst DishSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tcategory : {\r\n\t\ttype: String\r\n\t},\r\n\ttoppings: [\r\n\t\t{\r\n\t\t\ttopping: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Topping'\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tdishPicture: {\r\n\t\ttype: String\r\n\t},\r\n\tcallories: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tdescription: {\r\n\t\ttype: String\r\n\t},\r\n\tcomposition: [\r\n\t\t{\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tconteiner: {\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tsize: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tprice: {\r\n\t\t\ttype: Number,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t},\r\n\tproteins: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tcarbohydrates: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tfats: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\tdefault: 5\r\n\t},\r\n\tlikes: {\r\n\t\ttype: Number,\r\n\t\trequired: true,\r\n\t\tdefault: 0\r\n\t},\r\n\tactive: {\r\n\t\ttype: Boolean,\r\n\t\tdefault: true,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\n\r\nDishSchema.methods.toJSON = function() {\r\n\treturn _.omit(this.toObject(), ['updatedAt', 'createdAt'])\r\n}\r\n\r\nDishSchema.methods.updateLikesCount = function() {\r\n\tconst dish = this;\r\n\treturn Like.count({dish: dish._id}).then(count => {\r\n\t\tdish.likes = count;\r\n\t\treturn dish.save();\r\n\t});\r\n}\r\n\r\n\r\nexport default mongoose.model('Dish', DishSchema);\r\n","import Dish from '../models/dish';\r\nimport Comment from '../models/comment';\r\n\r\nexport default async (dishId, valuation) => {\r\n\tlet commentsCount = await Comment.find().count(),\r\n\t\tcurrentRating = (await Dish.findOne({_id: dishId})).rating;\r\n\treturn Dish.update({_id: dishId}, {$set: {\r\n\t\trating: (valuation + currentRating * (commentsCount - 1))/commentsCount\r\n\t}})\r\n}\r\n","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\nimport updateRating from '../helpers/updateRating';\r\n\r\nconst CommentSchema = mongoose.Schema({\r\n\tdish: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'Dish',\r\n\t\trequired: true\r\n\t},\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User'\r\n\t},\r\n\ttext: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\trating: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\n\r\nCommentSchema.post('save', function(next) {\r\n\treturn updateRating(this.dish, this.rating)\r\n\t.catch(next);\r\n});\r\n\r\nexport default mongoose.model('Comment', CommentSchema);","export default (req, res, next) => {\r\n\tconst id = req.params.id;\r\n\tif (!id) return next();\r\n\tconst re = new RegExp('(^[0-9a-fA-F]{24}$)');\r\n\tif (!id.match(re)) {\r\n\t\treturn res.status(400).json({success: false, msg: `Incorrect id`});\r\n\t}\r\n\treturn next();\r\n}","export default async (model, modifiedSince) => {\r\n\tmodifiedSince = new Date(Date.parse(modifiedSince));\r\n\tlet news = await model.find({\"updatedAt\": {$gt: `${modifiedSince}.999Z`}});\r\n\tif (news[0]) {\r\n\t\tlet lastModified = news.reduce(function(prev, candidate) {\r\n\t\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t\t});\r\n\t\tlastModified = Date.parse(lastModified.updatedAt);\r\n\t\tconst opts = {\r\n\t\t\tyear: 'numeric',\r\n\t\t\tmonth: 'short',\r\n\t\t\tday: 'numeric',\r\n\t\t\tweekday: 'short',\r\n\t\t\thour: 'numeric',\r\n\t\t\tminute: 'numeric',\r\n\t\t\tsecond: 'numeric',\r\n\t\t\ttimeZoneName: 'short',\r\n\t\t\thour12: false\r\n\t\t};\r\n\t\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\t\treturn {\r\n\t\t\tnews,\r\n\t\t\tlastModified\r\n\t\t}\r\n\t} else {\r\n\t\treturn;\r\n\t}\r\n}","export default async (model) => {\r\n\tconst arr = await model.find();\r\n\tif (!arr[0]) return;\r\n\tlet lastModified = arr.reduce(function(prev, candidate) {\r\n\t\treturn (prev.updatedAt > candidate.updatedAt) ? prev : candidate;\r\n\t});\r\n\tlastModified = Date.parse(lastModified.updatedAt);\r\n\tconst opts = {\r\n\t\tyear: 'numeric',\r\n\t\tmonth: 'short',\r\n\t\tday: 'numeric',\r\n\t\tweekday: 'short',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric',\r\n\t\tsecond: 'numeric',\r\n\t\ttimeZoneName: 'short',\r\n\t\thour12: false\r\n\t};\r\n\tlastModified = (new Date(lastModified)).toLocaleString('en-US', opts);\r\n\treturn lastModified;\r\n}","import express from 'express';\r\nimport access from '../middleware/access';\r\nimport checkId from '../middleware/checkId';\r\nimport ifModifiedSince from '../resources/ifModifiedSince';\r\nimport getLastModified from '../resources/getLastModified';\r\n\r\nexport default class defaultRoutes {\r\n\tconstructor(params) {\r\n\t\tObject.assign(this, params);\r\n\t\tthis.router = express.Router();\r\n\t}\r\n\r\n\tinit(model, modelName) {\r\n\t\tthis.initGet(model, modelName);\r\n\t\tthis.initPost(model, modelName);\r\n\t\tthis.initPut(model, modelName);\r\n\t\tthis.initDelete(model, modelName);\r\n\t}\r\n\t\r\n\tinitGet(model, modelName) {\r\n\t\tthis.router.get('/:id?/:select?', checkId, this.getMiddlewares || [], async(req, res, next ) => {\r\n\t\t\tconst id = req.params.id;\r\n\t\t\tconst select = req.params.select;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (!id && !select) {\r\n\t\t\t\t\tlet modifiedSince = req.headers['if-modified-since'];\r\n\t\t\t\t\tif (modifiedSince) {\r\n\t\t\t\t\t\t\tconst changes = await ifModifiedSince(model, modifiedSince);\r\n\t\t\t\t\t\t\tif (changes) {\r\n\t\t\t\t\t\t\t\tres.set('Last-Modified', changes.lastModified);\r\n\t\t\t\t\t\t\t\treturn res.json(changes.news);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn res.status(304).send();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (req.user && req.user.phone) {\r\n\t\t\t\t\t\t\treturn res.json(await model.find({userId: req.user._id}).populate(this.populate || ''));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst lastModified = await getLastModified(model);\r\n\t\t\t\t\t\tres.set('Last-Modified', lastModified);\r\n\t\t\t\t\t\treturn res.json(await model.find().populate(this.populate || ''));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (id && !select) {\r\n\t\t\t\t\tconst elem = await model.findById(id).populate(this.populate || '');\r\n\t\t\t\t\tif (!elem) return res.status(404).json({success: false, msg: `${modelName} not found`})\r\n\t\t\t\t\treturn res.json(elem);\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem[`${select}`]) return res.json({success: false, msg: `Cannot select ${select}`});\r\n\t\t\t\treturn res.json(elem[`${select}`]);\r\n\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitPost(model, modelName) {\r\n\t\tthis.router.post('', this.postMiddlewares || [], async(req, res, next) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!this.canRepeated || this.canRepeated != true) {\r\n\t\t\t\t\tconst exist = await model.findOne(req.body);\r\n\t\t\t\t\tif (exist) {\r\n\t\t\t\t\t\treturn res.status(400).json({success: false, msg: `${modelName} aready exist`});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.user && req.user._id) {\r\n\t\t\t\t\tvar elem = new model(Object.assign(req.body, {user: req.user._id}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar elem = new model(req.body);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tawait elem.save();\r\n\t\t\t\treturn res.status(201).json(elem);\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitPut(model, modelName) {\r\n\t\tthis.router.put('/:id', checkId, this.putMiddlewares || [], async(req, res, next) => {\r\n\t\t\tconst id = req.params.id;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait model.update({_id: id}, {$set:\r\n\t\t\t\t\treq.body\r\n\t\t\t\t});\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} updated`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tinitDelete(model, modelName) {\r\n\t\tthis.router.delete('/:id', checkId, this.deleteMiddlewares || [], async(req, res, next) => {\r\n\t\t\tconst id = req.params.id;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst elem = await model.findById(id);\r\n\t\t\t\tif (!elem) return res.status(404).json({success:false, msg: `${modelName} not found`});\r\n\t\t\t\tawait elem.remove();\r\n\t\t\t\treturn res.json({success: true, msg: `${modelName} deleted`});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tnext(err);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n","import fs from 'fs';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\nimport bcrypt from 'bcryptjs';\r\nimport User from '../models/user';\r\nimport Like from '../models/like';\r\nimport Comment from '../models/comment';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\nvar multipart = require('connect-multiparty');\r\nvar multipartMiddleware = multipart();\r\n\r\nconst defaultUsers = new testDefaultRoutes();\r\n\r\n// Register\r\ndefaultUsers.router.post('', async(req, res, next) => {\r\n\tconst exist = await User.findOne({phone: req.body.phone});\r\n\tif (exist) return res.status(400).json({success: false, msg: 'User already exist'});\r\n\r\n\ttry {\r\n\t\tconst user = new User(req.body),\r\n\t\t\t  phone = user.phone;\r\n\t\tuser.save();\r\n\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n});\r\n\r\n// login\r\ndefaultUsers.router.post('/login', async(req, res, next) => {\r\n\tconst phone = req.body.phone,\r\n\t\t  password = req.body.password;\r\n\r\n\ttry {\r\n\t\tconst user = await User.findOne({phone: phone});\r\n\t\tif (!user) return res.status(404).json({success: false, msg: \"User not found\"});\r\n\r\n\t\tif (await bcrypt.compare(password, user.password)) {\r\n\t\t\tconst token = jwt.sign({phone}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, user.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.post('/avatars', multipartMiddleware, passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tconst img = req.files.avatar;\r\n\t\tfs.writeFile(__dirname + '/debug.txt', JSON.stringify(req.files), err => {\r\n\t\t\tif (err) throw err;\r\n\t\t})\r\n\r\n\t\tlet oldImage = (await User.findById(req.user._id)).avatar;\r\n\t\tif (oldImage != '') {\r\n\t\t\toldImage = path.resolve(__dirname, '../uploads/avatars') + '/' + oldImage.split('/avatars/')[1];\r\n\t\t\tfs.unlink(oldImage, err => {\r\n\t\t\t\tif (err) throw err;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfs.readFile(img.path, (err, data) => {\r\n\t\t\tif (err) next(err);\r\n\t\t\tconst way = path.resolve(__dirname, '../uploads/avatars') + '/' + img.originalFilename;\r\n\t\t\tfs.writeFile(way, data, async(err) => {\r\n\t\t\t\tif (err) next(err);\r\n\t\t\t\tconst link = 'http://arusremservis.ru/users/avatars/' + img.originalFilename;\r\n\t\t\t\tawait User.findOneAndUpdate({_id: req.user._id}, {$set: {\r\n\t\t\t\t\tavatar: link\r\n\t\t\t\t}});\r\n\t\t\t\tres.json({success: true, link: link});\r\n\t\t\t})\r\n\t\t})\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.get('/avatars/:img', async(req, res) => {\r\n\ttry {\r\n\t\tres.sendFile(path.resolve(__dirname, '../uploads/avatars') + '/' + req.params.img);\r\n\t} catch(err) {\r\n\t\tres.send(err);\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.put('', passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tconst user = await User.findOneAndUpdate({_id: req.user._id}, {$set:\r\n\t\t\treq.body,\r\n\t\t\treturnNewDocument : true\r\n\t\t})\r\n\t\treturn res.json(user);\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.delete('', passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tawait User.findOneAndRemove({_id: req.user._id})\r\n\t\treturn res.json({success: true, msg: 'User updated'});\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultUsers.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(['/dishes', 'toppings', '/locations'].indexOf(req.path));\r\n})\r\n\r\ndefaultUsers.initGet(User, 'user');\r\n\r\nexport default defaultUsers.router;","import Dish from '../models/dish';\r\nimport Comment from '../models/comment';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport ifModifiedSince from '../resources/ifModifiedSince';\r\n\r\nconst defaultDishes = new testDefaultRoutes();\r\n\r\ndefaultDishes.router.get('/:id/comments', async(req, res, next) => {\r\n\ttry {\r\n\t\tconst comments = await Comment.find({dish: req.params.id});\r\n\t\treturn res.json(comments);\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultDishes.init(Dish, 'dish');\r\n\r\nexport default defaultDishes.router;","import mongoose from 'mongoose';\r\nconst { Schema } = mongoose;\r\n\r\nconst daySchema = new Schema({\r\n\tworkingHours: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tbreak: [\r\n\t\t{\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t]\r\n}, {\r\n\t_id: false\r\n})\r\n\r\nconst LocationSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tworkingTime: {\r\n\t\tmonday: daySchema,\r\n\t\ttuesday: daySchema,\r\n\t\twednesday: daySchema,\r\n\t\tthursday: daySchema,\r\n\t\tfriday: daySchema,\r\n\t\tsaturday: daySchema,\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n})\r\n\r\nexport default mongoose.model('Location', LocationSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Location from '../models/location';\r\n\r\n\r\nconst defaultLocations = new testDefaultRoutes();\r\n\r\ndefaultLocations.init(Location, 'locations');\r\n\r\nexport default defaultLocations.router;","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Like from '../models/like';\r\nimport Dish from '../models/dish';\r\nimport checkId from '../middleware/checkId';\r\nimport passport from 'passport';\r\n\r\nconst defaultLikes = new testDefaultRoutes({\r\n\tpostMiddlewares: [\r\n\t\tpassport.authenticate('jwt', {session: false})\r\n\t]\r\n});\r\n\r\ndefaultLikes.router.post('', passport.authenticate('jwt', {session: false}), async(req, res, next) => {\r\n\ttry {\r\n\t\tconst exist = await Like.findOne({dish: req.body.dish, user: req.user._id});\r\n\t\tif (exist) {\r\n\t\t\tawait exist.remove();\r\n\t\t\t(await Dish.findOne({_id: req.body.dish})).updateLikesCount();\r\n\t\t\treturn res.json({success: true, msg: 'Like deleted'});\r\n\t\t}\r\n\r\n\t\tconst newLike = new Like(Object.assign({}, req.body, {user: req.user._id}));\r\n\t\tawait newLike.save();\r\n\t\t(await Dish.findOne({_id: req.body.dish})).updateLikesCount();\r\n\t\treturn res.status(201).json(newLike);\r\n\r\n\t} catch(err) {\r\n\t\tnext(err);\r\n\t}\r\n})\r\n\r\ndefaultLikes.initGet(Like, 'like');\r\n\r\nexport default defaultLikes.router;\r\n","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Comment from '../models/comment';\r\nimport passport from 'passport';\r\n\r\nconst defaultComments = new testDefaultRoutes({\r\n\tpostMiddlewares: [\r\n\t\tpassport.authenticate('jwt', {session: false})\r\n\t],\r\n\tcanRepeated: true\r\n});\r\ndefaultComments.init(Comment, 'comments');\r\n\r\nexport default defaultComments.router;","import mongoose from 'mongoose';\r\nimport { Schema } from 'mongoose';\r\n\r\nconst ToppingSchema = mongoose.Schema({\r\n\tname: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tprice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\tweight: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t}\r\n})\r\n\r\nexport default mongoose.model('Topping', ToppingSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Topping from '../models/topping';\r\n\r\nconst defaultToppings = new testDefaultRoutes();\r\ndefaultToppings.init(Topping, 'topping');\r\n\r\nexport default defaultToppings.router;","import Order from '../models/order';\r\n\r\nexport default async () => {\r\n\tconst arr = [...Array(1000).keys()].splice(1);\r\n\tconst orders = await Order.find();\r\n\tconst usedNumbers = [];\r\n\torders.map(order => {\r\n\t\tusedNumbers.push(order.number);\r\n\t})\r\n\tconst unique = arr.filter((value) => {\r\n\t\treturn usedNumbers.indexOf(value) == -1;\r\n\t});\r\n\treturn unique[0]; \r\n}","import mongoose from 'mongoose';\r\nimport getUniqueNumber from '../helpers/getUniqueNumber';\r\nconst { Schema } = mongoose;\r\nimport _ from 'lodash';\r\n\r\nconst OrderSchema = mongoose.Schema({\r\n\tuser: {\r\n\t\ttype: Schema.Types.ObjectId,\r\n\t\tref: 'User'\r\n\t},\r\n\tdishes: [\r\n\t\t{\r\n\t\t\tdish: {\r\n\t\t\t\ttype: Schema.Types.ObjectId,\r\n\t\t\t\tref: 'Dish',\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\tquantity: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\trequired: true,\r\n\t\t\t\tdefault: 1\r\n\t\t\t},\r\n\t\t\t_id: false\r\n\t\t}\r\n\t],\r\n\tpayStatus: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tcompleted: {\r\n\t\ttype: Boolean,\r\n\t\trequired: true,\r\n\t\tdefault: false\r\n\t},\r\n\tstatus: {\r\n\t\ttype: String,\r\n\t\trequired: true,\r\n\t\tdefault: 'Обратывается'\r\n\t},\r\n\ttotalPrice: {\r\n\t\ttype: Number,\r\n\t\trequired: true\r\n\t},\r\n\ttime: {\r\n\t\ttype: String,\r\n\t\trequired: true\r\n\t},\r\n\tnumber: {\r\n\t\ttype: Number\r\n\t}\r\n}, {\r\n\ttimestamps: true\r\n});\r\n\r\nOrderSchema.pre('save', function(next) {\r\n\treturn getUniqueNumber()\r\n\t.then(unique => {\r\n\t\tthis.number = unique;\r\n\t\tnext();\r\n\t})\r\n\t.catch(next)\r\n})\r\n\r\nOrderSchema.methods.toJSON = function() {\r\n\treturn _.pick(this, ['_id', 'user', 'dishes', 'payStatus', 'completed', 'status', 'totalPrice', 'time', 'number']);\r\n}\r\n\r\nexport default mongoose.model('Order', OrderSchema);","import testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Order from '../models/order';\r\nimport passport from 'passport';\r\n\r\nconst defaultOrders = new testDefaultRoutes({\r\n\tpostMiddlewares: [\r\n\t\tpassport.authenticate('jwt', {session: false})\r\n\t],\r\n\tcanRepeated: true,\r\n\tpopulate: 'user dishes.dish'\r\n});\r\n\r\ndefaultOrders.init(Order, 'order');\r\n\r\nexport default defaultOrders.router;","import passport from 'passport';\r\nimport testDefaultRoutes from '../resources/testDefaultRoutes';\r\nimport Employee from '../models/employee';\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config/index';\r\n\r\nconst params = {\r\n\tgetMiddlewares:[], //middlewares for 'get' request\r\n\tpostMiddlewares:[], //middlewares for 'post' request\r\n\tdeleteMiddlewares:[], //middlewares for 'delete' request\r\n\tputMiddlewares:[] //middlewares for 'put' request\r\n}\r\n\r\nconst defaultEmployees = new testDefaultRoutes(params);\r\n\r\n// Register\r\ndefaultEmployees.router.post('', async(req, res) => {\r\n\tconst exist = await Employee.findOne({login: req.body.login});;\r\n\tif (exist) return res.status(400).json({success: false, msg: 'Employee already exist'});\r\n\r\n\ttry {\r\n\t\tconst employee = new Employee(req.body),\r\n\t\t\t  login = employee.login;\r\n\t\temployee.save();\r\n\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\treturn res.status(201).json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t} catch(err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n});\r\n\r\n// Authenticate\r\ndefaultEmployees.router.post('/login', async(req, res) => {\r\n\tconst login = req.body.login,\r\n\t\t  password = req.body.password;\r\n\r\n\tconst employee = await Employee.findOne({login: login});\r\n\tif (!employee) return res.status(404).json({success: false, msg: \"Employee not found\"});\r\n\r\n\ttry {\r\n\t\tif (await bcrypt.compare(password, employee.password)) {\r\n\t\t\tconst token = jwt.sign({login}, config.secret, {expiresIn: 604800});\r\n\t\t\treturn res.json(Object.assign({}, employee.toJSON(), {token: 'JWT ' + token}));\r\n\t\t} else {\r\n\t\t\treturn res.status(403).json({success: false, msg: 'Wrong password'});\r\n\t\t}\r\n\t} catch(err) {\r\n\t\treturn res.status(500).json({success: false, msg: err.name});\r\n\t}\r\n})\r\n\r\ndefaultEmployees.router.post('/profile', passport.authenticate('jwt', {session: false}), async (req, res) => {\r\n\tres.json(req.user);\r\n})\r\n\r\n\r\ndefaultEmployees.initGet(Employee, 'employees');\r\ndefaultEmployees.initPut(Employee, 'employees');\r\n\r\nexport default defaultEmployees.router;","import express from 'express';\r\nimport cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport Promise from 'bluebird';\r\nimport path from 'path';\r\nimport passport from 'passport';\r\nimport fs from 'fs';\r\nimport config from './config/index';\r\nimport Passport from './config/passport';\r\nimport users from './routes/users';\r\nimport dishes from './routes/dishes';\r\nimport locations from './routes/locations';\r\nimport likes from './routes/likes';\r\nimport comments from './routes/comments';\r\nimport toppings from './routes/toppings';\r\nimport orders from './routes/orders';\r\nimport employees from './routes/employees';\r\nimport Topping from './models/topping';\r\n\r\n\r\n\r\nconst app = express();\r\nvar bodyParser = require('body-parser');\r\nPassport(passport);\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public'))); \r\napp.use('/static', express.static(path.resolve(__dirname, '../site')));\r\nconst port = 3000;\r\n\r\napp.disable('x-powered-by');\r\n\r\nmongoose.Promise = Promise;\r\n// Connect to Database\r\nmongoose.connect(config.database);\r\n// On connection\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('connected to database ' + config.database);\r\n});\r\n// On Error\r\nmongoose.connection.on('error', (err) => {\r\n\tconsole.log('database error' + err);\r\n});\r\n\r\napp.use('/users', users);\r\napp.use('/dishes', dishes);\r\napp.use('/locations', locations);\r\napp.use('/likes', likes);\r\napp.use('/comments', comments);\r\napp.use('/toppings', toppings);\r\napp.use('/orders', orders);\r\napp.use('/employees', employees);\r\n\r\napp.use((req, res, next) => {\r\n\treturn res.status(404).json({msg: '404 Not Found'});\r\n})\r\n\r\napp.use((err, req, res, next) => {\r\n\tconsole.log(err);\r\n\treturn res.status(500).json({success: false, msg: err.name});\r\n})\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n\tconsole.log('yep' + port);\r\n})"],"names":["mongoose","Promise","UserSchema","Schema","String","methods","toJSON","_","pick","pre","next","bcrypt","genSalt","then","hash","password","salt","catch","model","EmployeeSchema","JwtStrategy","require","Strategy","ExtractJwt","passport","jwtFromRequest","fromAuthHeader","secretOrKey","config","secret","use","opts","jwt_payload","done","login","Employee","findOne","phone","User","user","Passport","LikeSchema","Types","ObjectId","DishSchema","Number","Boolean","omit","toObject","updateLikesCount","dish","Like","count","_id","likes","save","dishId","valuation","Comment","find","Dish","rating","update","$set","currentRating","commentsCount","CommentSchema","post","updateRating","req","res","id","params","re","RegExp","match","status","json","success","msg","modifiedSince","Date","parse","$gt","news","reduce","prev","candidate","updatedAt","lastModified","toLocaleString","arr","defaultRoutes","router","express","Router","modelName","initGet","initPost","initPut","initDelete","get","checkId","getMiddlewares","select","headers","ifModifiedSince","changes","set","send","userId","populate","getLastModified","findById","elem","postMiddlewares","canRepeated","body","exist","put","putMiddlewares","delete","deleteMiddlewares","remove","multipart","multipartMiddleware","defaultUsers","testDefaultRoutes","jwt","sign","expiresIn","token","compare","authenticate","session","files","avatar","writeFile","__dirname","err","oldImage","path","resolve","split","unlink","readFile","img","data","way","originalFilename","findOneAndUpdate","link","sendFile","findOneAndRemove","indexOf","defaultDishes","comments","init","daySchema","LocationSchema","defaultLocations","Location","defaultLikes","newLike","defaultComments","ToppingSchema","defaultToppings","Topping","Array","keys","splice","Order","map","push","order","number","filter","value","usedNumbers","unique","OrderSchema","getUniqueNumber","defaultOrders","defaultEmployees","employee","log","name","app","bodyParser","cors","initialize","static","join","port","disable","connect","database","connection","on","users","dishes","locations","toppings","orders","employees","listen"],"mappings":"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"}